// <auto-generated />
using System;
using AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppDbContext.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.tbl_Author", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Author");
                });

            modelBuilder.Entity("Entities.tbl_Book", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isLost")
                        .HasColumnType("bit");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<Guid>("titleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Book");
                });

            modelBuilder.Entity("Entities.tbl_Category", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Category");
                });

            modelBuilder.Entity("Entities.tbl_Cities", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Cities");
                });

            modelBuilder.Entity("Entities.tbl_Counter", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("counterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Counter");
                });

            modelBuilder.Entity("Entities.tbl_Districts", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("cityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Districts");
                });

            modelBuilder.Entity("Entities.tbl_LibraryLoan", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isReturnAll")
                        .HasColumnType("bit");

                    b.Property<Guid>("librarianId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("listBookLoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("readerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("totalBook")
                        .HasColumnType("int");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_LibraryLoan");
                });

            modelBuilder.Entity("Entities.tbl_Necessary", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<string>("typeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Necessary");
                });

            modelBuilder.Entity("Entities.tbl_Role", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("permissions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Role");
                });

            modelBuilder.Entity("Entities.tbl_Title", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("authorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("categoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("quantityLoaning")
                        .HasColumnType("int");

                    b.Property<int>("quantityLost")
                        .HasColumnType("int");

                    b.Property<int>("quantityReal")
                        .HasColumnType("int");

                    b.Property<string>("thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Title");
                });

            modelBuilder.Entity("Entities.tbl_Users", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("address")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<double?>("birthday")
                        .HasColumnType("float");

                    b.Property<Guid?>("cityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("createdDateKeyForgot")
                        .HasColumnType("float");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("districtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("fullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("gender")
                        .HasColumnType("int");

                    b.Property<bool?>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("keyForgotPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("oneSignalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("roles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<string>("thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("wardId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Users");
                });

            modelBuilder.Entity("Entities.tbl_Wards", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("created")
                        .HasColumnType("float");

                    b.Property<Guid?>("createdBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("districtId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("updated")
                        .HasColumnType("float");

                    b.Property<Guid?>("updatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("tbl_Wards");
                });
#pragma warning restore 612, 618
        }
    }
}
